// =============================================
//                Navigation
//          Last Updated:2013-8-21
// =============================================

%navigation {
  @extend %relative;
  @include _clear;
  background: $nav-color;
  color: $nav-text;
  border: $border-thickness $border-style $nav-border-color;
  border-radius: $default-radius;

  &:before {
    float: left;
    display: inline-block;
    content: attr(title);
    padding: 0.25em 0.5em;
    font-weight: bold;
  }
}

%navigation-list {
  @extend %unstyled, %zero, %clear;
}

%navigation-list-item {
  @extend %block, %relative;
}

%navigation-link {
  @extend %inline-block, %align-left, %strong;
  background: $nav-color;
  color: $nav-text;
  cursor: pointer;
  width: 100%;
  padding: 0.25em 1em;
  text-decoration: none;
  cursor: pointer;
  line-height: 1.5;
  border: 0;
  border-top: $border-thickness $border-style $nav-border-color;
  border-radius: 0;
  &:hover, &:focus {
    @extend %navigation-link-active;
  }
}

%hamburger-button {
  @extend %pull-right;
  display: inline-block;
  background: none;
  color: $nav-active-text;
  width: auto;
  border: 0;
  &:hover, &:focus {
    background: none !important;
  }
  &:before {
    @include icon($fa-var-list);
  }
  &[aria-expanded="true"] {
    &:before {
      content: $fa-var-caret-square-o-up;
    }
  }
}

%navigation-link-on, %navigation-link-active {
  background: $nav-active;
  color: $nav-active-text;
  text-decoration: none;
}

%navigation-link-disabled  { @include state(disabled,normal,desaturate($nav-color,20%)); }

%navigation-menu {
  display: none;
  z-index: 9;
  min-width: 100%;
  border: $border-thickness $border-style $nav-border-color;
  border-radius: 0 0 $default-radius $default-radius;
}

@for $i from 1 through length($modifier-name) {
  %navigation-#{nth($modifier-name, $i)},
  %navigation-menu-#{nth($modifier-name, $i)} {
    background-color: #{nth($modifier-code, $i)};
    color: #{nth($modifier-text, $i)};
    border-color: darken(nth($modifier-code, $i), 5%);
  }
  %navigation-link-#{nth($modifier-name, $i)} {
    background-color: #{nth($modifier-code, $i)};
    color: #{nth($modifier-text, $i)};
    border-color: darken(nth($modifier-code, $i), 5%);
    &.active, &:hover, &:focus {
      background: darken(nth($modifier-code, $i), 5%);
      border-color: darken(nth($modifier-code, $i), 10%);
    }
    &.disabled {
      @include state(disabled,normal,desaturate(nth($modifier-code, $i),20%));
    }
  }
}

@include output() {

  @if $navigation-classes {
    .no-js {
      .nav {
        ul {
          li {
            &:hover, &:focus {
              > ul {
                display: block;
              }
            }
          }
        }
      }
    }
    .nav {
      @extend %navigation;

      // modifier colors
      @for $i from 1 through length($modifier-name) {
        &.#{nth($modifier-name, $i)} {
          @extend %navigation-#{nth($modifier-name, $i)};
          li[role="menu"] {
            &[aria-expanded="true"] {
              > a, > button {
                background: darken(nth($modifier-code, $i), 5%);
                border-color: darken(nth($modifier-code, $i), 10%);
                color: nth($modifier-text, $i)
              }
            }
            ul {
              @extend %navigation-menu-#{nth($modifier-name, $i)};
              a, button {
                @extend %navigation-link-#{nth($modifier-name, $i)};
              }
            }
          }
          button.hamburger {
            color: #{nth($modifier-text, $i)}
          }
          a, button {
            @extend %navigation-link-#{nth($modifier-name, $i)};
          }
        }
      }

      > ul {
        display: none;
        > li {
          > a, > button {
            border-top-width: $border-thickness;
          }
        }
      }

      ul {
        @extend %navigation-list;

        &[aria-expanded="true"] {
          display: block;
        }
      }

      li {
        @extend %navigation-list-item;

        &[role="menu"] {

          &[aria-expanded="true"] {
            > a, > button {
              @extend %navigation-link-active;
            }
          }
          &[aria-pressed="true"] {
            > a, > button {
              &:after {
                content: $fa-var-caret-up;
              }
            }
          }

          > a, > button {
            &:after {
              @include icon($fa-var-caret-down);
              margin-left: 0.5em;
            }
          }

          ul {
            border-width: 0;
            > li {
              &:first-child {
                > a, > button {
                  border-top-width: $border-thickness;
                }
              }
            }
          }
        }

        ul {
          @extend %navigation-menu;
          > li {
            &:first-child {
              > a, > button {
                border-top-width: 0;
              }
            }
          }
          a, button {
            display: block;
            width: 100%;
          }
        }

        li {
          float: none;
          &:last-child {
            > {
              a, button {
                border-radius: 0 0 $default-radius $default-radius;
              }
            }
          }

          ul {
            border-radius: 0 $default-radius $default-radius $default-radius;

            li {
              &:first-child {
                > {
                  a, button {
                    border-radius: 0 $default-radius 0 0;
                  }
                }
              }
              &:last-child {
                > {
                  a, button {
                    border-radius: 0 0 $default-radius $default-radius;
                  }
                }
              }
            }
          }

          a, button {
            padding-left: 1.5em;
          }
          li {
            a, button {
              padding-left: 2em;
            }
            li {
              a, button {
                padding-left: 2.5em;
              }
              li {
                a, button {
                  padding-left: 3em;
                }
              }
            }
          }
        }
      }

      a, a:visited, button {
        @extend %navigation-link;
        @for $i from 1 through length($navigation-states) {
          &.#{nth($navigation-states, $i)} {
            @extend %navigation-link-#{nth($navigation-states, $i)};
          }
        }
      }

      button.hamburger {
        @extend %hamburger-button;
      }
    }

    @include breakpoints($append: "none", $base: $navigation-base) {
      @include bar-mode($breakpoint-target);
    }
  }

  @if $aria-selectors {
    [role~="navigation"] {
      @extend %navigation;
    }
  }

}
